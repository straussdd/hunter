os: linux
dist: bionic
osx_image: xcode11.3
language: rust
rust: nightly
services:
  - docker
cache:
  directories:
    - ${TRAVIS_HOME}/.cargo
    - ${TRAVIS_HOME}/Library/Caches/Homebrew
  
branches:
  only:
    - master

jobs:
  include:
    # Linux on ARMv7/AArch32
    - name: linux-arm-32-full
      env: arch='armv7-unknown-linux-gnueabihf' feats='img,sixel,video'
    - name: linux-arm-32-imgonly
      env: arch='armv7-unknown-linux-gnueabihf' feats='img,sixel'
    - name: linux-arm-32-lite
      env: arch='armv7-unknown-linux-gnueabihf' feats=''

    # Linux on ARM64/AArch64
    - name: linux-arm-64-full
      env: arch='aarch64-unknown-linux-gnu' feats='img,sixel,video'
    - name: linux-arm-64-imgonly
      env: arch='aarch64-unknown-linux-gnu' feats='img,sixel'
    - name: linux-arm-64-lite
      env: arch='aarch64-unknown-linux-gnu' feats=''

    # Linux on Intel P6/x86
    - name: linux-intel-32-full
      env: arch='i686-unknown-linux-gnu' feats='img,sixel,video'
    - name: linux-intel-32-imgonly
      env: arch='i686-unknown-linux-gnu' feats='img,sixel'
    - name: linux-intel-32-lite
      env: arch='i686-unknown-linux-gnu' feats=''

    # Linux on Intel x64/AMD64
    - name: linux-intel-64-full
      env: arch='x86_64-unknown-linux-gnu' feats='img,sixel,video'
    - name: linux-intel-64-imgonly
      env: arch='x86_64-unknown-linux-gnu' feats='img,sixel'
    - name: linux-intel-64-lite
      env: arch='x86_64-unknown-linux-gnu' feats=''

    # Linux on 64-bit little-endian PowerPC
    - name: linux-powerpc-64le-full
      env: arch='powerpc64le-unknown-linux-gnu' feats='img,sixel,video'
    - name: linux-powerpc-64le-imgonly
      env: arch='powerpc64le-unknown-linux-gnu' feats='img,sixel'
    - name: linux-powerpc-64le-lite
      env: arch='powerpc64le-unknown-linux-gnu' feats=''

    # Linux on 64-bit IBM Z
    - name: linux-s390x-64-full
      env: arch='s390x-unknown-linux-gnu' feats='img,sixel,video'
    - name: linux-s390x-64-imgonly
      env: arch='s390x-unknown-linux-gnu' feats='img,sixel'
    - name: linux-s390x-64-lite
      env: arch='s390x-unknown-linux-gnu' feats=''

    # MacOS on Intel x64/AMD64
    - name: macos-intel-64-full
      env: arch='x86_64-apple-darwin' feats='img,sixel,video'
      os: osx
    - name: macos-intel-64-imgonly
      env: arch='x86_64-apple-darwin' feats='img,sixel'
      os: osx
    - name: macos-intel-64-lite
      env: arch='x86_64-apple-darwin' feats=''
      os: osx

install:
  - cargo install cross

before_script:
  - ci/prepare-toolchain.sh "${DOCKER_USERNAME}" "${DOCKER_PASSWORD}" "${arch}"
  - |
    if [[ "${TRAVIS_OS_NAME}" == 'osx' ]]; then
      PKG_CONFIG_PATH='/Library/Frameworks/GStreamer.framework/Versions/Current/lib/pkgconfig'
    fi

script:
  - cross build --release --target "${arch}" --no-default-features ${feats:+--features ${feats}}

before_deploy:
  - if [[ -n "${feats}" ]]; then TRAVIS_TAG="preview-${TRAVIS_COMMIT::8}"; fi
  - release="hunter-${TRAVIS_TAG}-${TRAVIS_JOB_NAME}"
  - mkdir "${release}"
  - cp "target/${arch}/release/hunter" "${release}/"
  - cp README.md LICENSE config.tar.gz "${release}/"
  - if [[ -n "${feats}" ]]; then cp "target/${arch}/release/hunter-media" "${release}/"; fi
  - GZIP=-9 tar --create --gzip --verbose --file="${release}.tar.gz" "${release}"/*

deploy:
  provider: releases
  edge: yes
  file: ${release}.tar.gz

notifications:
  email:
    no
